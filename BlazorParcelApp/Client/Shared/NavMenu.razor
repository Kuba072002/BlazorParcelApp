@using System.Security.Claims
@using BlazorParcelApp.Client.Services;
@implements IDisposable
@inject AuthenticationStateProvider AuthStateProvider
@inject AppState AppState
@inject IAuthService AuthService


<nav class="navbar navbar-expand-lg bg-dark">
  <div class="container-fluid">
    <a class="navbar-brand text-light" href="">BlazorParcelApp</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
            <span class="oi oi-home" aria-hidden="true"></span> Home
          </NavLink>
        </li>
        @if (AppState.Role == "User")
        {
            <li class="nav-item">
                <NavLink class="nav-link" href="/parcel-add">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Add parcel
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="/parcels">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Parcels
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="/lockers">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Lockers
                </NavLink>
            </li>
        }
        else if(AppState.Role == "Admin")
        {
            <li class="nav-item">
                <NavLink class="nav-link" href="/admin/parcels">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Parcels
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="/admin/lockers">
                     <span class="oi oi-list-rich" aria-hidden="true"></span> Lockers
                </NavLink>
            </li>
        }
      </ul>
      <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
      <AuthorizeView>
        <NotAuthorized>
        <li class="nav-item">
          <NavLink class="nav-link" href="account/register">
            <span class="oi oi-person" aria-hidden="true"></span> Register
          </NavLink>
        </li>
        <li class="nav-item">
          <NavLink class="nav-link" href="account/login">
            <span class="oi oi-person" aria-hidden="true"></span> Login
          </NavLink>
        </li>
        </NotAuthorized>
        <Authorized>
        <li class="nav-item">
          <NavLink class="nav-link" href="account/logout">
            <span class="oi oi-person" aria-hidden="true"></span> Logout
          </NavLink>
        </li>
        </Authorized>
      </AuthorizeView>
      </ul>
    </div>
  </div>
</nav>

@code {
    protected override async Task OnInitializedAsync()
    {
        AppState.OnChange += StateHasChanged;
        await AppState.Set(await AuthService.GetAuthRole());
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }
}