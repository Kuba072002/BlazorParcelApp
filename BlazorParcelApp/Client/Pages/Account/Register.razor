@page "/account/register"
@using BlazorParcelApp.Client.Services;
@inject IAuthService AuthService
@inject NotificationService NotificationService

<PageTitle>Register</PageTitle>

<EditForm Model="user" OnValidSubmit="HandleRegistration" class="d-flex flex-column align-items-center">
<div class="border p-4 col-6">
    <h3 class="text-center">Register</h3>
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="usernane">Username</label>
        <InputText id="usernane" @bind-Value="user.Username" class="form-control" />
        <ValidationMessage For="@(() => user.Username)" />
    </div>
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary w-100">Register</button>
    <div class="@messageCssClass mt-2 text-center">
        <span>@message</span>
    </div>

    <div class="alert alert-info mt-3">
        If you already have an account, please <a href="account/login">Log in</a>
    </div>
</div>
</EditForm>

@code {
    UserRegisterDto user = new UserRegisterDto();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration() {
        var result = await AuthService.Register(user);
        message = result.Message;
        if (result.Success){
            messageCssClass = "text-success";
            NotificationService.Notify(
                new NotificationMessage 
                { 
                    Severity = NotificationSeverity.Success, 
                    Summary = "Registration successfull", 
                    Duration = 4000 
                }
            );
        }
        else
            messageCssClass = "text-danger";
    }
}